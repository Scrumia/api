name: Build, test and deploy

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

  test:
    name: "üß™ Tests"
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: harmon758/postgresql-action@v1
        with:
          postgresql version: "11"
          postgresql db: scrumia

      - run: npm install
      - run: npm run coverage
        env:
          HOST: 0.0.0.0
          NODE_ENV: ${{secrets.ENV_TEST}}
          PG_HOST: localhost
          PG_PORT: ${{secrets.DATABASE_PORT_TEST}}
          PG_USER:
          PG_PASSWORD:
          PG_DB_NAME: scrumia
          APP_KEY: ${{secrets.APP_KEY}}
          DRIVE_DISK: local
          DB_CONNECTION: pg

  deployToReview:
    name: "üßê Deploy to review env"
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: [build, test]

    steps:
      - name: Heroku Review Application
        uses: mheap/github-action-pr-heroku-review-app@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEROKU_API_TOKEN: ${{secrets.HEROKU_API_KEY}}
          HEROKU_PIPELINE_ID: ${{secrets.HEROKU_PIPELINE_ID}}

  deployToStaging:
    name: "‚ö°Ô∏è Deploy to staging env"
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    needs: [build, test]
    environment:
      name: staging
      url: "https://api-capuche-dopale-test.herokuapp.com/"

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME_TEST}}
          heroku_email: ${{secrets.HEROKU_MAIL}}

  deployToProd:
    name: "üöÄ Deploy to prod env"
    runs-on: ubuntu-latest
    needs: [deployToStaging]
    environment:
      name: production
      url: "https://api-capuche-dopale.herokuapp.com/"

    steps:
      - uses: actions/checkout@v2
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME_PROD}}
          heroku_email: ${{secrets.HEROKU_MAIL}}

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "@everyone üéâ Le projet a bien √©t√© deploy√© en production √† l'adresse suivante : https://api-capuche-dopale.herokuapp.com. üéâ Voir la documentation : https://api-capuche-dopale.herokuapp.com/docs"

      - name: Discord notification
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
